
***************************************************************************************************
*                                                                                                 *
* Subject: RBAC - ClusterRole & ClusterRoleBinding | Kubernetes                                   *
*                                                                                                 *
* Author: Srinath Challa | Kubernetes SME | Udemy                                                 *
*                                                                                                 *
* Created On: June 2021                                                                            *
*                                                                                                 *
* Connect me on:                                                                                  *    
* --------------                                                                                  *
* https://www.udemy.com/user/srinathchalla/                                                       *
* https://www.linkedin.com/in/srinathchalla/                                                      *
* https://www.youtube.com/srinathchalla                                                           *
*                                                                                                 *
* Reference:                                                                                      *
* ----------                                                                                      *
* https://kubernetes.io/docs/reference/access-authn-authz/authorization/                          *
* https://kubernetes.io/docs/reference/access-authn-authz/rbac/                                   *
* https://www.sumologic.com/glossary/role-based-access-control/                                   *
* https://www.cncf.io/blog/2018/08/01/demystifying-rbac-in-kubernetes/                            *
*                                                                                                 *
***************************************************************************************************

In this demo:
-------------
a. First, we will create the test "user account" for testing this demo
b. Next,  We will create the "ClusterRole" with list of actions performed "across all namespaces"
c. After that, We will assign this ClusterRole to "user" by creating "ClusterRoleBinding"
d. Finally, we will test the above configuration by deploying sample applications.

Note:
----
a. ClusterRole and ClusterRoleBindings are "NON-Namespace" specific.


***************************************************************************************************


1. Creating Kubernetes test User Account(appmonitor) (using x509 for testing RBAC)
------------------------------------------------------------------------------

# Generating Key
openssl genrsa -out appmonitor.key 2048

# Generaing Certificate Signing request (csr):
openssl req -new -key appmonitor.key -out appmonitor.csr -subj "/CN=appmonitor"

# Singing CSR using K8s Cluster "Certificate" and "Key"
openssl x509 -req -in appmonitor.csr \
        -CA /etc/kubernetes/pki/ca.crt \
        -CAkey /etc/kubernetes/pki/ca.key \
        -CAcreateserial \
        -out appmonitor.crt -days 300

# Adding user credentials to "kubeconfig" file
kubectl config set-credentials appmonitor  --client-certificate=appmonitor.crt --client-key=appmonitor.key

# Creating context for this user and associating it with our cluster:
kubectl config set-context appmonitor-context --cluster=kubernetes --user=appmonitor

# Displaying K8s Cluster Config
kubectl config view


***************************************************************************************************


2. Creating Namespaces and Pod for testing RBAC:
------------------------------------------------

kubectl create ns test-ns1
kubectl create ns test-ns2


2a. Creating test Pod:
----------------------
#Pod
kubectl run nginx-pod-default --image=nginx
kubectl run redis-pod-ns1 --image=redis -n test-ns1
kubectl run httpd-pod-ns2 --image=busybox -n test-ns2

................................................

2c. Test Before Deploying:
--------------------------
kubectl get pods --user=appmonitor
kubectl get pods -n test-ns1 --user=appmonitor
kubectl get pods -n test-ns2 --user=appmonitor 
kubectl get pods -n kube-system --user=appmonitor
kubectl get pods -A --user=appmonitor


***************************************************************************************************


2. Creating a "ClusterRole" & "ClusterRoleBinding":
-------------------------------------

2a. Creating Resources Declaratively (Using YAML):
-------------------------------------------------
# ClusterRole
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: clusterrole-monitoring
rules:
- apiGroups: [""] 
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
---
# ClusterRoleBinding
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: clusterrole-binding-monitoring
subjects:
- kind: User
  name: appmonitor 
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole 
  name: clusterrole-monitoring
  apiGroup: rbac.authorization.k8s.io


..........................................................................


2b. Creating Resources Imperatively (Commands):
-----------------------------------------------

# Cluster-role
kubectl create clusterrole clusterrole-monitoring --verb=get,list,watch --resource=pods

# Cluster-rolebinding
kubectl create clusterrolebinding clusterrole-binding-monitoring --clusterrole=clusterrole-monitoring --user=appmonitor


***************************************************************************************************


3. Display ClusterRole and ClusterRoleBinding:
----------------------------------------------
# clusterrole
kubectl get clusterrole | grep clusterrole-monitoring

# clusterrolebinding
kubectl get clusterrolebinding | grep clusterrole-binding-monitoring

kubectl describe clusterrole clusterrole-monitoring
kubectl describe clusterrolebinding clusterrole-binding-monitoring


***************************************************************************************************


4. Testing ClusterRole & ClusterRoleBinding:
--------------------------------------------


Pod Operations: get, list, watch - in "kube-system", "default", "test-ns1", and "test-ns2" namespaces:
------------------------------------------------------------------------------------------------------
kubectl auth can-i get pods -n kube-system --user=appmonitor
kubectl auth can-i get pods -n default --user=appmonitor
kubectl auth can-i get pods -n test-ns1 --user=appmonitor
kubectl auth can-i get pods -n test-ns2 --user=appmonitor

kubectl get pods -n kube-system --user=appmonitor
kubectl get pods -n default --user=appmonitor
kubectl get pods -n test-ns1 --user=appmonitor
kubectl get pods -n test-ns2 --user=appmonitor


...........................................................................


Creating Objects in "default" (or in any other) namespace: 
-------------------------------------------------------
kubectl auth can-i create pods --user=appmonitor
kubectl auth can-i create services --user=appmonitor
kubectl auth can-i create deployments --user=appmonitor

kubectl run redis-pod --image=redis --user=appmonitor
kubectl create deploy redis-deploy --image=redis --user=appmonitor

...........................................................................


Deleting Objects in "default" (or in any other) namespace: 
----------------------------------------------------------
kubectl auth can-i delete pods --user=appmonitor
kubectl auth can-i delete services --user=appmonitor
kubectl auth can-i delete deployments --user=appmonitor

kubectl delete pods nginx-pod --user=appmonitor


***************************************************************************************************

5. Cleanup:
------------

#Delete ClusterRole and ClusterRoleBinding:
-------------------------------------------
kubectl delete clusterrole clusterrole-monitoring 
kubectl delete clusterrolebinding clusterrole-binding-monitoring

#Removing User and Context from Cluster Config
-----------------------------------------------
kubectl config unset users.appmonitor
kubectl config unset contexts.appmonitor-context

Ensure user "appmonitor" and its configuration is removed:
----------------------------------------------------------
kubectl get pods --user=appmonitor
kubectl config view

Deleting Pods:
--------------
kubectl delete pod nginx-pod-default 
kubectl delete pod redis-pod-ns1 -n test-ns1
kubectl delete pod httpd-pod-ns2 -n test-ns2

#Deleting Namespace:
--------------------
kubectl delete ns test-ns1
kubectl delete ns test-ns2

#Validating:
-----------
kubectl get ns
kubectl get pods
kubectl get clusterrole | grep monitoring
kubectl get clusterrolebinding | grep monitoring


***************************************************************************************************