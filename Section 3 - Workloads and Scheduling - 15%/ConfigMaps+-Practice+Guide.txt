***************************************************************************************************
*                                                                                                 *
* Subject: ConfigMap | Kubernetes                                                                 *
*                                                                                                 *
* Author: Srinath Challa | Kubernetes SME | Udemy                                                 *
*                                                                                                 *
* Created On: Feb 2021                                                                            *
*                                                                                                 *
* Connect me on:                                                                                  *    
* --------------                                                                                  *
* https://www.udemy.com/user/srinathchalla/                                                       *
* https://www.linkedin.com/in/srinathchalla/                                                      *
* https://www.youtube.com/srinathchalla                                                           *
*                                                                                                 *
* Reference:                                                                                      *
* ----------                                                                                      *
* https://kubernetes.io/docs/concepts/configuration/configmap/                                    *
* https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/               *
* https://cloud.google.com/kubernetes-engine/docs/concepts/configmap                              *
* https://matthewpalmer.net/kubernetes-app-developer/articles/ultimate-configmap-guide-kubernetes.html
*                                                                                                 *
***************************************************************************************************

In this demo:
-------------
We will create the ConfigMap using both Imperatively and Declaratively
Next, we will use above ConfigMap into Pod, as environment variables, arguments, and files inside vol.

NOTE: Create ConfigMap before you use it inside Pod

***************************************************************************************************

1. Creating Configmap Declaratively (Using YAML file):
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Example-1:
---------
apiVersion: v1
kind: ConfigMap
metadata:
  name: env-config-yaml
data:
  ENV_ONE: "va1ue1" 
  ENV_TWO: "va1ue2"



Example-2:
----------
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-nginx-config-yaml
data:
  my-nginx-config.conf: |-
    server {
      listen 80;
      server_name www.kubia-example.com;
      gzip on;
      gzip_types text/plain application/xml;
      location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
      }
    }
    sleep-interval: 25



***************************************************************************************************


2. Creating ConfigMap Imperatively (from Command line):
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
kubectl create configmap <NAME> <SOURCE>


From Literal value:
------------------
kubectl create configmap env-config-cmd --from-literal=ENV_ONE=value1 --from-literal=ENV_TWO=value2


From File:
----------
kubectl create configmap my-ngix-config-file-cmd --from-file=/path/to/configmap-file.txt

kubectl create configmap my-config --from-file=path/to/bar


***************************************************************************************************


3. Displaying ConfigMap:
~~~~~~~~~~~~~~~~~~~~~~~~

kubectl get configmap <NAME>
kubectl get configmap <NAME> -o wide
kubectl get configmap <NAME> -o yaml
kubectl get configmap <NAME> -o json

kubectl describe configmap <NAME>


***************************************************************************************************


4. Editing ConfigMap:
~~~~~~~~~~~~~~~~~~~~~

kubectl edit configmap <NAME>


***************************************************************************************************


5. Injecting ConfigMap into Pod As Environment Variables (1/3):
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# cm-pod-env.yaml
apiVersion: v1
kind: Pod
metadata:
  name: cm-pod-env
spec:
  containers:
    - name: test-container
      image: nginx
      env:
      - name: ENV_VARIABLE_1
        valueFrom:
          configMapKeyRef:
            name: env-config-yaml
            key: ENV_ONE
      - name: ENV_VARIABLE_2
        valueFrom:
          configMapKeyRef:
            name: env-config-yaml
            key: ENV_TWO
  restartPolicy: Never


Deploy:
-------
kubectl apply -f cm-pod-env.yaml

Validate:
---------
kubectl exec cm-pod-env -- env | grep ENV


***************************************************************************************************


6. Injecting ConfigMap into Pod As Arguments(2/2):
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# cm-pod-arg.yaml
apiVersion: v1
kind: Pod
metadata:
  name: cm-pod-arg
spec:
  containers:
    - name: test-container
      image: k8s.gcr.io/busybox
      command: [ "/bin/sh", "-c", "echo $(ENV_VARIABLE_1) and $(ENV_VARIABLE_2)" ]
      env:
      - name: ENV_VARIABLE_1
        valueFrom:
          configMapKeyRef:
            name: env-config-yaml
            key: ENV_ONE
      - name: ENV_VARIABLE_2
        valueFrom:
          configMapKeyRef:
            name: env-config-yaml
            key: ENV_TWO
  restartPolicy: Never


Deploy:
---------
kubectl apply -f cm-pod-arg.yaml

Validate:
---------
kubectl logs cm-pod-arg


***************************************************************************************************


7. Injecting ConfigMap into As Files inside Volume(3/3):
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# cm-pod-file-vol.yaml
apiVersion: v1
kind: Pod
metadata:
  name: cm-pod-file-vol
spec:
  volumes:
    - name: mapvol
      configMap:
        name: my-nginx-config-yaml
  containers:
    - name: test-container
      image: nginx
      volumeMounts:
      - name: mapvol
        mountPath: /etc/config
  restartPolicy: Never


Deploy:
-------
kubectl apply -f cm-pod-file-vol.yaml

Validate:
----------
kubectl exec configmap-vol-pod -- ls /etc/config
kubectl exec configmap-vol-pod -- cat /etc/config/etc/config/my-nginx-config.conf


***************************************************************************************************


8. Running operations directly on the YAML file:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
kubectl [OPERATION] –f [FILE-NAME.yaml]
kubectl get –f [FILE-NAME.yaml]
kubectl delete –f [FILE-NAME.yaml]
kubectl get -f [FILE-NAME.yaml]
kubectl create -f [FILE-NAME.yaml]


***************************************************************************************************


9. Delete ConfigMap:
~~~~~~~~~~~~~~~~~~~~
kubectl delete configmap <NAME>


***************************************************************************************************





